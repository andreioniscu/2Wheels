<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="history.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>